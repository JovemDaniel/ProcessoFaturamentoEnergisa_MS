<Activity mc:Ignorable="sap sap2010" x:Class="GetDataPDF" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_strEnergisaExcelFilePath" Type="OutArgument(x:String)" />
    <x:Property Name="out_strPedidoVendaPath" Type="OutArgument(x:String)" />
    <x:Property Name="out_strOrderTOTVS" Type="OutArgument(x:String)" />
    <x:Property Name="out_strDatePDF" Type="OutArgument(x:String)" />
    <x:Property Name="in_strMedicaoLoteMSFileName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetDataPDF_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetDataPDF" sap:VirtualizedContainerService.HintSize="1836,8238" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="arrPDFCollection" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_LayoutData" />
      <Variable x:TypeArguments="x:String" Name="strEnergisaExcelFilePath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message - Start process GetDataPDF" sap:VirtualizedContainerService.HintSize="550,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Inicando leitura de dados de PDF's encontrados&quot;]" />
    <Assign DisplayName="Assign - Declaring CollectPDF variable" sap:VirtualizedContainerService.HintSize="550,114" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[arrPDFCollection]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("C:\Users\luis.nascimento\Documents\Teste UI Path\FATURAMENTO_ENERGISAMS\MEDIÇÕES_MS", "*.pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - PDFData in TestUiPath" sap:VirtualizedContainerService.HintSize="550,7928" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[arrPDFCollection]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="strDataPDF" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Corpo of For Each PDFData in TestUiPath" sap:VirtualizedContainerService.HintSize="516,7791" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strContractPDF" />
              <Variable x:TypeArguments="x:String" Name="strDatePDF" />
              <Variable x:TypeArguments="x:String" Name="strCodInvoicePDF" />
              <Variable x:TypeArguments="x:String" Name="strConsolidationPDF" />
              <Variable x:TypeArguments="x:String" Name="strTotalCost" />
              <Variable x:TypeArguments="x:String" Name="strCityPDF" />
              <Variable x:TypeArguments="x:String" Name="strMunicipalityPDF" />
              <Variable x:TypeArguments="x:String" Name="strImportLayoutPath" />
              <Variable x:TypeArguments="x:String" Name="strPaymentCondition" />
              <Variable x:TypeArguments="x:String" Name="strNatureCode" />
              <Variable x:TypeArguments="x:String" Name="strProductCode" />
              <Variable x:TypeArguments="ui:GenericValue" Name="strClientCode" />
              <Variable x:TypeArguments="x:String" Name="strOrderType" />
              <Variable x:TypeArguments="ui:GenericValue" Name="strOrderTOTVS" />
              <Variable x:TypeArguments="x:String" Name="strState" />
              <Variable x:TypeArguments="x:String" Name="strCommentText" />
              <Variable x:TypeArguments="x:String" Name="strImportCsvFilePath" />
              <Variable x:TypeArguments="x:String" Name="strReadTextPath" />
              <Variable x:TypeArguments="x:String" Name="strPedidoVendaPath" />
              <Variable x:TypeArguments="x:String" Name="strReadTextFileUTF" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text - Reading the data from each PDF" FileName="[strDataPDF]" sap:VirtualizedContainerService.HintSize="482,114" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[strDataPDF]" />
            <ui:MultipleAssign DisplayName="Multiple Assign to define the variables for collect Data from PDFs" sap:VirtualizedContainerService.HintSize="482,334" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strContractPDF]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDataPDF, "Contrato:\s*([0-9]+\.[0-9]+\.[0-9]+)").Groups(1).Value.Trim()]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strDatePDF]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDataPDF, "Data:\s*(\d{2}/\d{2}/\d{4})").Groups(1).Value.Replace("/", ".").Trim()]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strCodInvoicePDF]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDataPDF, "Faturamento:\s*(\d+)").Groups(1).Value.Trim()]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strConsolidationPDF]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDataPDF, "Consolidação:\s*(\d+)").Groups(1).Value.Trim()]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strTotalCost]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDataPDF, "Total Item:\s*(.*)").Groups(1).Value.Trim()]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strMunicipalityPDF]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDataPDF, "Município:\s*(\d+)").Groups(1).Value.Trim()]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strCityPDF]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDataPDF, "Empresa:\s*(.*?\s*[M|m][S|s])").Groups(1).Value.Trim()]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
            <Assign DisplayName="Assign to define path to Energisa - UiPath.xlsx" sap:VirtualizedContainerService.HintSize="482,84" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strEnergisaExcelFilePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">C:\Users\luis.nascimento\Documents\Teste UI Path\FATURAMENTO_ENERGISAMS\CONTROLE MS\ENERGISA - UIPATH.xlsm</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Excel Application Scope - Pasting Data in excel file Energisa - UiPath" sap:VirtualizedContainerService.HintSize="482,3607" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" SensitivityOperation="None" Visible="False" WorkbookPath="[strEnergisaExcelFilePath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Fazer - Pasting Data in excel file Energisa - UiPath" sap:VirtualizedContainerService.HintSize="416,3465" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message - Duplication sheet" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Duplicando planilha base Dados...&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:LogMessage DisplayName="Log Message - Changing new sheet name " sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[&quot;Alterando nome da nova planilha e adicionando data extraída do PDF para melhor identificação...&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:ExcelCopySheet DestinationFilePath="{x:Null}" DestinationSheetName="[&quot;Dados - &quot; &amp; strDatePDF]" DisplayName="Duplicating sheet Dados to Dados - 'strDatePDF'" sap:VirtualizedContainerService.HintSize="382,112" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_1" SheetName="Dados">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelCopySheet>
                    <ui:LogMessage DisplayName="Log Message - Executing macro AtualizarCodigoPedido" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;Executando macro 'AtualizarCodigoPedido' para gerar novo número de pedido...&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" sap2010:Annotation.AnnotationText="A macro AtualizarCodigoPedido pega o código da célula G13 na penúltima planilha, soma +1 e coloca o novo código na célula G13 da última planilha. Depois, copia esse código atualizado e cola também na planilha &quot;Dados&quot;." DisplayName="Execute Macro for order code autoincrement" sap:VirtualizedContainerService.HintSize="382,231" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="AtualizarCodigoPedido">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExecuteMacro>
                    <ui:LogMessage DisplayName="Log Message - Pasting data in sheet Energisa - UiPath" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Colando dados do PDF na planilha Energisa - UiPath&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:ExcelWriteCell Cell="C3" DisplayName="Write Cell - ContractPDF" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]" Text="[strContractPDF]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="D10" DisplayName="Write Cell - ConsolidationPDF" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]" Text="[strConsolidationPDF]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="E3" DisplayName="Write Cell - DatePDF" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]" Text="[strDatePDF]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="C13" DisplayName="Write Cell - CodInvoicePDF" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]" Text="[strCodInvoicePDF]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="D13" DisplayName="Write Cell - TotalCost in Energisa Uipath file" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]" Text="[strTotalCost]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="F13" DisplayName="Write Cell - MunicípioPDF" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]" Text="[strMunicipalityPDF]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="E13" DisplayName="Write Cell - CidadePDF" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]" Text="[strCityPDF]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:LogMessage DisplayName="Log Message - Data PDF pasted in Energisa UiPath" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Dados colados em planilha excel Energisa - UiPath&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:LogMessage DisplayName="Log Message - Reading Data from new sheet" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[&quot;Lendo dados da planilha criada...&quot;]" />
                    <ui:ExcelReadCell Cell="G1" DisplayName="Read Cell - ClientCode" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="ui:GenericValue">[strClientCode]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadCell>
                    <ui:ExcelReadCell Cell="G2" DisplayName="Read Cell - NatureCode" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[strNatureCode]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadCell>
                    <ui:ExcelReadCell Cell="G3" DisplayName="Read Cell - ProductCode" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[strProductCode]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadCell>
                    <ui:ExcelReadCell Cell="G6" DisplayName="Read Cell - PaymentCondition" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[strPaymentCondition]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadCell>
                    <ui:ExcelReadCell Cell="G7" DisplayName="Read Cell - OrderType" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[strOrderType]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadCell>
                    <ui:ExcelReadCell Cell="G13" DisplayName="Read Cell - OrderTOTVS" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelReadCell_8" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="ui:GenericValue">[strOrderTOTVS]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadCell>
                    <ui:ExcelReadCell Cell="L13" DisplayName="Read Cell - Comment Text" sap:VirtualizedContainerService.HintSize="382,84" sap2010:WorkflowViewState.IdRef="ExcelReadCell_9" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[strCommentText]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadCell>
                    <ui:LogMessage DisplayName="Log Message - Data Readed" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Dados lidos e armazenados em variáveis!&quot;]" />
                    <ui:LogMessage DisplayName="Log Message - Executing macro 'FormatarCelulas'" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Executando macro 'FormatarCelulas'...&quot;]" />
                    <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" sap2010:Annotation.AnnotationText="A macro FormatarCelulas verifica e corrige possíveis problemas de formatação na planilha, ajustando a célula H13 para o formato de texto, garantindo que valores numéricos mantenham zeros à esquerda e outras configurações essenciais para a consistência dos dados." DisplayName="Execute Macro to format cells correctly" sap:VirtualizedContainerService.HintSize="382,246" sap2010:WorkflowViewState.IdRef="ExecuteMacro_2" MacroName="FormatarCelulas">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExecuteMacro>
                    <ui:LogMessage DisplayName="Log Message - Macro finished" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Macro 'FormatarCelulas' finalizada!&quot;]" />
                    <ui:ExcelReadCell Cell="G9" DisplayName="Read Cell - State" sap:VirtualizedContainerService.HintSize="382,83" sap2010:WorkflowViewState.IdRef="ExcelReadCell_10" SheetName="[&quot;Dados - &quot; &amp; strDatePDF]">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[strState]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadCell>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <Assign DisplayName="Assign - Declaring Path to Import_Layout File" sap:VirtualizedContainerService.HintSize="482,84" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strImportLayoutPath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">C:\Users\luis.nascimento\Documents\Teste UI Path\FATURAMENTO_ENERGISAMS\CONTROLE MS\Import_LayoutTOTVS.xlsm</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Excel Application Scope - LayoutTOTVS" sap:VirtualizedContainerService.HintSize="482,1749" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" SensitivityOperation="None" Visible="False" WorkbookPath="[strImportLayoutPath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Fazer" sap:VirtualizedContainerService.HintSize="416,1607" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message - Transferindo dados Layout TOTVS" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Transferindo dados para Layout_TOTVS.xlsm...&quot;]" />
                    <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell - ProductCode" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="LayoutSheet" Text="[strProductCode]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="C2" DisplayName="Write Cell - OrderTOTVS" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="LayoutSheet" Text="[strOrderTOTVS]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="D2" DisplayName="Write Cell - ClientCode" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="LayoutSheet" Text="[strClientCode]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="D3" DisplayName="Write Cell - TotalCost" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="LayoutSheet" Text="0,10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="G2" DisplayName="Write Cell - PaymentCondition" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="LayoutSheet" Text="[strPaymentCondition]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="H2" DisplayName="Write Cell - OrderType" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_28" SheetName="LayoutSheet" Text="[strOrderType]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="I2" DisplayName="Write Cell - NatureCode" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_29" SheetName="LayoutSheet" Text="[strNatureCode]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="J2" DisplayName="Write Cell - CommentText" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_30" SheetName="LayoutSheet" Text="[strCommentText]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="L2" DisplayName="Write Cell - CityPDF" sap:VirtualizedContainerService.HintSize="382,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_32" SheetName="LayoutSheet" Text="[strState]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="M2" DisplayName="Write Cell - MunicipalityPDF" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_33" SheetName="LayoutSheet" Text="[strMunicipalityPDF]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:LogMessage DisplayName="Log Message - Transfer finished" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Transferência de dados concluída para LayoutTOTVS.xlsm&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:LogMessage DisplayName="Log Message - FormatarValoresLayout" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Executando macro 'FormatarValoresLayout'...&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" sap2010:Annotation.AnnotationText="A macro FormatarValoresLayout corrige problemas de formatação na coluna D, convertendo valores para o formato correto e garantindo consistência dos dados na planilha." DisplayName="Execute Macro - FormatarValoresLayout" sap:VirtualizedContainerService.HintSize="382,174" sap2010:WorkflowViewState.IdRef="ExecuteMacro_3" MacroName="FormatarValoresLayout">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExecuteMacro>
                    <ui:LogMessage DisplayName="Log Message - Finished macro FormatarValoresLayout" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Macro 'FormatarValoresLayout' executada!&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:ExcelReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_LayoutData]" DisplayName="Read Range - strLayoutData" sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="LayoutSheet">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadRange>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:LogMessage DisplayName="Log Message - Transforming LayoutTOTVs to CSV" sap:VirtualizedContainerService.HintSize="482,173" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Trace" Message="[&quot;Transformando LayoutTOTVS para CSV...&quot;]" />
            <ui:MultipleAssign DisplayName="Multiple Assign - ImportCsv File | strReadTextPath | strWriteTextPath" sap:VirtualizedContainerService.HintSize="482,210" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strImportCsvFilePath]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">C:\Users\luis.nascimento\Documents\Teste UI Path\FATURAMENTO_ENERGISAMS\CONTROLE MS\Import_LayoutTOTVS.csv</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strReadTextPath]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">C:\Users\luis.nascimento\Documents\Teste UI Path\FATURAMENTO_ENERGISAMS\CONTROLE MS\LayoutTOTVS.txt</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strPedidoVendaPath]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">C:\Users\luis.nascimento\Documents\Teste UI Path\FATURAMENTO_ENERGISAMS\IMPORT TOTVS\PedidosdeVenda_ansi.txt</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:AppendWriteCsvFile PathResource="{x:Null}" AddHeaders="False" CsvAction="Write" DataTable="[dt_LayoutData]" Delimitator="Semicolon" DelimitatorForViewModel="Semicolon" DisplayName="Write CSV - Creating CSV file with strLayoutData data" FilePath="[strImportCsvFilePath]" sap:VirtualizedContainerService.HintSize="482,234" sap2010:WorkflowViewState.IdRef="AppendWriteCsvFile_1" ShouldQuote="True" />
            <ui:RenameFileX DisplayName="Rename File - Changing name file to 'LayoutTOTVS.txt'" FilePath="[strImportCsvFilePath]" sap:VirtualizedContainerService.HintSize="482,175" sap2010:WorkflowViewState.IdRef="RenameFileX_1" KeepExtension="False" NewName="LayoutTOTVS.txt" />
            <ui:ReadTextFile File="{x:Null}" Content="[strReadTextFileUTF]" DisplayName="Read Text File - LayoutTOTVS.txt" Encoding="Windows-1252" FileName="[strReadTextPath]" sap:VirtualizedContainerService.HintSize="482,112" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
            <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File - Creating PedidosdeVenda_ansi.txt" Encoding="Windows-1252" FileName="[strPedidoVendaPath]" sap:VirtualizedContainerService.HintSize="482,165" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[strReadTextFileUTF]" />
            <ui:LogMessage DisplayName="Log Message - Deleting duplicate file LayoutTOTVS" sap:VirtualizedContainerService.HintSize="482,173" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Deletando arquivo LayoutTOTVS.txt duplicado...&quot;]" />
            <ui:DeleteFileX DisplayName="Delete File - Deleting file duplicate LayoutTOTVS.txt" sap:VirtualizedContainerService.HintSize="482,112" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[strReadTextPath]" />
            <ui:LogMessage DisplayName="Log Message - Delete finished duplicate file LayoutTOTVS" sap:VirtualizedContainerService.HintSize="482,173" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Arquivo LayoutTOTVS.txt deletado...&quot;]" />
            <ui:MultipleAssign DisplayName="Multiple Assign - Declaring path to out_strEnergisaExcelFilePath | strPedidoVendaPath" sap:VirtualizedContainerService.HintSize="482,232" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[out_strEnergisaExcelFilePath]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[strEnergisaExcelFilePath]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[out_strPedidoVendaPath]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[strPedidoVendaPath]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[out_strOrderTOTVS]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[strOrderTOTVS]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[out_strDatePDF]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[strDatePDF]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>